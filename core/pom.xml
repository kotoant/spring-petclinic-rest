<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.samples</groupId>
        <artifactId>spring-petclinic-rest</artifactId>
        <version>3.0.4</version>
    </parent>

    <groupId>org.springframework.samples</groupId>
    <artifactId>core</artifactId>
    <version>3.0.4</version>

    <properties>
        <jooq.generated.sources.directory>target/generated-sources/jooq</jooq.generated.sources.directory>
        <openapi.generated.sources.directory>target/generated-sources/openapi</openapi.generated.sources.directory>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-reactor</artifactId>
        </dependency>
        <dependency>
            <groupId>io.projectreactor.kotlin</groupId>
            <artifactId>reactor-kotlin-extensions</artifactId>
            <version>1.2.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.samples</groupId>
            <artifactId>db</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
            <version>2.0.3</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.0.3</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-r2dbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>r2dbc-postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.github.microutils</groupId>
            <artifactId>kotlin-logging-jvm</artifactId>
            <version>3.0.5</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>${jackson-databind-nullable.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure-processor</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>${jooq.version}</version>

                <executions>
                    <execution>
                        <id>jooq-codegen</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>

                <dependencies>
                    <dependency>
                        <groupId>org.testcontainers</groupId>
                        <artifactId>jdbc</artifactId>
                        <version>${testcontainers.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.testcontainers</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${testcontainers.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jooq</groupId>
                        <artifactId>jooq-meta-extensions</artifactId>
                        <version>${jooq.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jooq</groupId>
                        <artifactId>jooq-codegen</artifactId>
                        <version>${jooq.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.springframework.samples</groupId>
                        <artifactId>db</artifactId>
                        <version>${project.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                        <version>${junit.version}</version>
                    </dependency>
                </dependencies>

                <configuration>
                    <jdbc>
                        <driver>org.testcontainers.jdbc.ContainerDatabaseDriver</driver>
                        <url>
                            jdbc:tc:postgresql:14:///petclinic?currentSchema=public&amp;TC_INITFUNCTION=org.springframework.samples.petclinic.db.LiquibaseInit::initFunction
                        </url>
                        <user>postgres</user>
                        <password>postgres</password>
                    </jdbc>

                    <generator>
                        <database>
                            <name>org.jooq.meta.postgres.PostgresDatabase</name>
                            <includes>
                                public\..*
                                | pg_catalog\.pg_sleep
                            </includes>
                            <excludes>
                                databasechangelog.*
                            </excludes>
                            <schemata>
                                <schema>
                                    <inputSchema>public</inputSchema>
                                </schema>
                                <schema>
                                    <inputSchema>pg_catalog</inputSchema>
                                </schema>
                            </schemata>
                            <outputSchemaToDefault>true</outputSchemaToDefault>
                            <forcedTypes>
                                <forcedType>
                                    <name>INSTANT</name>
                                    <includeTypes>TIMESTAMP.*</includeTypes>
                                </forcedType>
                            </forcedTypes>
                        </database>
                        <generate>
                            <pojos>true</pojos>
                            <pojosAsJavaRecordClasses>true</pojosAsJavaRecordClasses>
                            <daos>true</daos>
                        </generate>
                        <target>
                            <packageName>org.springframework.samples.petclinic.jooq</packageName>
                            <directory>${jooq.generated.sources.directory}</directory>
                        </target>
                    </generator>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <!-- RELEASE_VERSION -->
                <version>${openapi-generator-maven-plugin.version}</version>
                <!-- /RELEASE_VERSION -->
                <executions>
                    <execution>
                        <id>generate-webmvc</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/openapi.yml</inputSpec>
                            <generatorName>kotlin-spring</generatorName>
                            <library>spring-boot</library>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <generateApis>true</generateApis>
                            <apiPackage>org.springframework.samples.petclinic.rest.api</apiPackage>
                            <generateModels>true</generateModels>
                            <modelPackage>org.springframework.samples.petclinic.rest.dto</modelPackage>
                            <modelNameSuffix>Dto</modelNameSuffix>
                            <importMappings>
                                <importMapping>ProblemDetail=org.springframework.http.ProblemDetail</importMapping>
                            </importMappings>
                            <typeMappings>
                                <typeMapping>ProblemDetail=org.springframework.http.ProblemDetail</typeMapping>
                            </typeMappings>
                            <schemaMappings>
                                <schemaMapping>ProblemDetail=org.springframework.http.ProblemDetail</schemaMapping>
                            </schemaMappings>
                            <configOptions>
                                <!-- RestController implementation is provided by Petclinic developers -->
                                <interfaceOnly>true</interfaceOnly>
                                <!-- Activating Java 8 features -->
                                <performBeanValidation>true</performBeanValidation>
                                <dateLibrary>java8</dateLibrary>
                                <useSpringBoot3>true</useSpringBoot3>
                                <openApiNullable>false</openApiNullable>
                                <!-- override the default library to jersey2 -->
                                <serializationLibrary>jackson</serializationLibrary>
                                <!-- switch documentation provider to springdoc -->
                                <documentationProvider>springdoc</documentationProvider>
                                <sourceFolder>/</sourceFolder>
                            </configOptions>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-webflux-coroutine</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/openapi.yml</inputSpec>
                            <generatorName>kotlin-spring</generatorName>
                            <library>spring-boot</library>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <generateApis>true</generateApis>
                            <apiPackage>org.springframework.samples.petclinic.rest.api.coroutine</apiPackage>
                            <generateModels>false</generateModels>
                            <modelPackage>org.springframework.samples.petclinic.rest.dto</modelPackage>
                            <modelNameSuffix>Dto</modelNameSuffix>
                            <templateDirectory>${project.basedir}/src/main/resources/kotlin-spring/coroutine</templateDirectory>
                            <importMappings>
                                <importMapping>ProblemDetail=org.springframework.http.ProblemDetail</importMapping>
                            </importMappings>
                            <typeMappings>
                                <typeMapping>ProblemDetail=org.springframework.http.ProblemDetail</typeMapping>
                            </typeMappings>
                            <schemaMappings>
                                <schemaMapping>ProblemDetail=org.springframework.http.ProblemDetail</schemaMapping>
                            </schemaMappings>
                            <configOptions>
                                <apiSuffix>CoroutineApi</apiSuffix>
                                <!-- RestController implementation is provided by Petclinic developers -->
                                <interfaceOnly>true</interfaceOnly>
                                <!-- Activating Java 8 features -->
                                <performBeanValidation>true</performBeanValidation>
                                <dateLibrary>java8</dateLibrary>
                                <useSpringBoot3>true</useSpringBoot3>
                                <openApiNullable>false</openApiNullable>
                                <!-- override the default library to jersey2 -->
                                <serializationLibrary>jackson</serializationLibrary>
                                <!-- switch documentation provider to springdoc -->
                                <documentationProvider>springdoc</documentationProvider>
                                <sourceFolder>/</sourceFolder>
                            </configOptions>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-webflux-reactive</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/openapi.yml</inputSpec>
                            <generatorName>kotlin-spring</generatorName>
                            <library>spring-boot</library>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <generateApis>true</generateApis>
                            <apiPackage>org.springframework.samples.petclinic.rest.api.reactive</apiPackage>
                            <generateModels>false</generateModels>
                            <modelPackage>org.springframework.samples.petclinic.rest.dto</modelPackage>
                            <modelNameSuffix>Dto</modelNameSuffix>
                            <templateDirectory>${project.basedir}/src/main/resources/kotlin-spring/reactive</templateDirectory>
                            <importMappings>
                                <importMapping>ProblemDetail=org.springframework.http.ProblemDetail</importMapping>
                            </importMappings>
                            <typeMappings>
                                <typeMapping>ProblemDetail=org.springframework.http.ProblemDetail</typeMapping>
                            </typeMappings>
                            <schemaMappings>
                                <schemaMapping>ProblemDetail=org.springframework.http.ProblemDetail</schemaMapping>
                            </schemaMappings>
                            <configOptions>
                                <apiSuffix>ReactiveApi</apiSuffix>
                                <!-- RestController implementation is provided by Petclinic developers -->
                                <interfaceOnly>true</interfaceOnly>
                                <!-- Activating Java 8 features -->
                                <performBeanValidation>true</performBeanValidation>
                                <dateLibrary>java8</dateLibrary>
                                <useSpringBoot3>true</useSpringBoot3>
                                <openApiNullable>false</openApiNullable>
                                <!-- override the default library to jersey2 -->
                                <serializationLibrary>jackson</serializationLibrary>
                                <!-- switch documentation provider to springdoc -->
                                <documentationProvider>springdoc</documentationProvider>
                                <sourceFolder>/</sourceFolder>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${jooq.generated.sources.directory}</source>
                                <source>${openapi.generated.sources.directory}</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
